package kejamart.controller.main;

import java.util.List;
import java.util.Map;
import java.util.concurrent.atomic.AtomicInteger;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.validation.Valid;

import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import kejamart.controller.main.UserSession;
import kejamart.dao.LogDAO;
import kejamart.dao.MessagesDAO;
import kejamart.dao.ProfileDAO;
import kejamart.helper.Settings;
import kejamart.helper.StringToMD5;
import kejamart.model.Messages;
import kejamart.model.Profile;

public class LoginController1 implements Settings {

	public LogDAO logDAO;
	public ProfileDAO profileDAO;
	MessagesDAO messagesDAO;

	public UserSession userSession = new UserSession();
	

    @RequestMapping(method = RequestMethod.GET)
    public String showForm(Map model, HttpServletRequest request) {
            Profile profile = new Profile();
            model.put("profile", profile);
        	request.getSession().setAttribute("errmg", "");
            return "login";
    }
   
       
        @RequestMapping(method = RequestMethod.POST)
        public ModelAndView processForm(HttpServletRequest request,
    			HttpServletResponse response, @RequestParam("email")String email,@RequestParam("password")String password, @ModelAttribute("profile") @Valid Profile profile, BindingResult result) throws Exception {
	          
	         ModelAndView modelAndView = new ModelAndView("login");
	        // ModelAndView mav = new ModelAndView("search");
	         
	          String rUrl = request.getContextPath();
	          
	        // Decrypt password	          
	          StringToMD5 str = new StringToMD5();	          
	          String hashPassword = str.MD5(profile.getPassword());	          
              
              boolean checkEmail = logDAO.checkEmail(profile.getEmail());
              //boolean checkPassx = logDAO.checkPassword(profile.getPassword());
              boolean checkPass = logDAO.checkPassword(hashPassword);
              boolean checkAdmin = logDAO.isAdmin(profile.getEmail());
              boolean checkMerchant = logDAO.isMerchant(profile.getEmail());
              boolean checkUser = logDAO.isUser(profile.getEmail());
                
  	          if (!result.hasErrors()) {
                
                if((checkEmail) && (checkPass) && (checkUser)){                	

                	Profile pr = new Profile();
                	pr = logDAO.getUserByEmail(email);
                	AtomicInteger idValue = new AtomicInteger(0);
                	idValue = pr.getId();
                	request.getSession().setAttribute(SESSION_USER, email);
                	request.getSession().setAttribute(LOGIN_DETAILS, idValue);
            		userSession.setLoggedIn(true);
            				
            		request.getSession().setAttribute("emailz", email);
            		
       	         List<Messages> messages = messagesDAO.getMessagesForEmail(email);     	     	
     	     	 int usralerts = messages.size();     	     	
     	     	 System.out.println("Total messages for User: " +usralerts);
     	     	 System.out.println("Message List: " +messages);
     	     	 request.getSession().setAttribute("mtotals", usralerts);
            		
            		//request.getSession().setAttribute("userSession","Welcome " + email+ "&nbsp;|&nbsp;<a href='"+ rUrl + "/logout.html'>Logout</a>");
     	     	    request.getSession().setAttribute("userSession","Welcome " + email);
            		//+ "&nbsp;&nbsp;|&nbsp;&nbsp;<a href='"+ rUrl + "/logout.html'>Logout</a>");
            		request.getSession().setAttribute("logoutLink","<a href='"+ rUrl + "/logout.html'>Logout</a>");
            		request.getSession().setAttribute("profileLink","<a href='"+ rUrl + "/profile.html'>Profile</a>");
                	
            		request.getSession().setAttribute("prof", "<li><img src ='led-icons/user_silhouette.png'><a/><a href='"+ rUrl + "/profile.html'>Profile</a></li>");
                 	request.getSession().setAttribute("alert", "<li><img src ='led-icons/exclamation.png'><a/><a href='"+ rUrl + "/requests.html'>Alerts</a></li>");
                	request.getSession().setAttribute("notif", "<li><img src ='led-icons/comment.png'><a/><a href='"+ rUrl + "/notifications.html'>Notifications</a></li>");
                	//request.getSession().setAttribute("dash", "<li><img src ='led-icons/chart_bar.png'><a/><a href='"+ rUrl + "/dashboard.html'>Analytics</a></li>");
                	//request.getSession().setAttribute("help", "<li><img src ='led-icons/help.png'><a/><a href='"+ rUrl + "/help.html'>Help</a></li>");       	
 	             	                	
                        System.out.println("Successfully logged in as " + profile.getEmail() + " with password " + profile.getPassword()+" decoded "+ hashPassword);
                        return new ModelAndView("redirect:/search.html");
                        
                }
                if((checkEmail) && (checkPass) && (checkMerchant)){
                	
                	Profile pr = new Profile();
                	pr = logDAO.getUserByEmail(email);
                	AtomicInteger idValue = new AtomicInteger(0);
                	idValue = pr.getId();
                	request.getSession().setAttribute(SESSION_USER, email);
                	request.getSession().setAttribute(LOGIN_DETAILS, idValue);
            		userSession.setLoggedIn(true);
            				
            		request.getSession().setAttribute("emailz", email);
            		
          	         List<Messages> messages = messagesDAO.getMessagesForEmail(email);     	     	
         	     	 int usralerts = messages.size();     	     	
         	     	 System.out.println("Total messages for User: " +usralerts);
         	     	 System.out.println("Message List: " +messages);
         	     	 request.getSession().setAttribute("mtotals", usralerts);            		
            		
             		//request.getSession().setAttribute("userSession","Welcome " + email+ "&nbsp;|&nbsp;<a href='"+ rUrl + "/logout.html'>Logout</a>");
      	     	    request.getSession().setAttribute("userSession","Welcome " + email);
             		//+ "&nbsp;&nbsp;|&nbsp;&nbsp;<a href='"+ rUrl + "/logout.html'>Logout</a>");
             		request.getSession().setAttribute("logoutLink","<a href='"+ rUrl + "/logout.html'>Logout</a>");
             		request.getSession().setAttribute("profileLink","<a href='"+ rUrl + "/profile.html'>Profile</a>");
                	
            		request.getSession().setAttribute("prof", "<li><img src ='led-icons/user_silhouette.png'><a/><a href='"+ rUrl + "/profile.html'>Profile</a></li>");
                	request.getSession().setAttribute("addp", "<li><img src ='led-icons/house.png'></a><a href='"+ rUrl + "/property.html'>Properties</a>");
                	request.getSession().setAttribute("alert", "<li><img src ='led-icons/exclamation.png'><a/><a href='"+ rUrl + "/requests.html'>Alerts</a></li>");
                	request.getSession().setAttribute("notif", "<li><img src ='led-icons/comment.png'><a/><a href='"+ rUrl + "/notifications.html'>Notifications</a></li>");
                	//request.getSession().setAttribute("dash", "<li><img src ='led-icons/chart_bar.png'><a/><a href='"+ rUrl + "/dashboard.html'>Analytics</a></li>");
                	//request.getSession().setAttribute("help", "<li><img src ='led-icons/help.png'><a/<a href='"+ rUrl + "/help.html'>Help</a></li>");                 	

                	    System.out.println("Successfully logged in as " + profile.getEmail() + " with password " + profile.getPassword()+" decoded "+ hashPassword);
                        System.out.println("MERCHANT Menu");
                    	
                        return new ModelAndView("redirect:/search.html");
                        
                }
                if((checkEmail) && (checkPass) && (checkAdmin)){  
                	
                	Profile pr = new Profile();
                	pr = logDAO.getUserByEmail(email);
                	AtomicInteger idValue = new AtomicInteger(0);
                	idValue = pr.getId();
                	request.getSession().setAttribute(SESSION_USER, email);
                	request.getSession().setAttribute(LOGIN_DETAILS, idValue);
            		userSession.setLoggedIn(true);
            				
            		request.getSession().setAttribute("emailz", email);
            		
          	         List<Messages> messages = messagesDAO.getMessagesForEmail(email);     	     	
         	     	 int usralerts = messages.size();     	     	
         	     	 System.out.println("Total messages for User: " +usralerts);
         	     	 System.out.println("Message List: " +messages);
         	     	 request.getSession().setAttribute("mtotals", usralerts);            		
            		
             		//request.getSession().setAttribute("userSession","Welcome " + email+ "&nbsp;|&nbsp;<a href='"+ rUrl + "/logout.html'>Logout</a>");
      	     	    request.getSession().setAttribute("userSession","Welcome " + email);
             		//+ "&nbsp;&nbsp;|&nbsp;&nbsp;<a href='"+ rUrl + "/logout.html'>Logout</a>");
             		request.getSession().setAttribute("logoutLink","<a href='"+ rUrl + "/logout.html'>Logout</a>");
             		request.getSession().setAttribute("profileLink","<a href='"+ rUrl + "/profile.html'>Profile</a>");
                	
            		//basic links
            		
            		request.getSession().setAttribute("prof", "<li><img src ='led-icons/user_silhouette.png'><a/><a href='"+ rUrl + "/profile.html'>Profile</a></li>");
                	request.getSession().setAttribute("alert", "<li><img src ='led-icons/exclamation.png'><a/><a href='"+ rUrl + "/requests.html'>Alerts</a></li>");
                	request.getSession().setAttribute("addp", "<li><img src ='led-icons/house.png'></a><a href='"+ rUrl + "/property.html'>Properties</a>");
                	request.getSession().setAttribute("notif", "<li><img src ='led-icons/comment.png'><a/><a href='"+ rUrl + "/notifications.html'>Notifications</a></li>");
                	//request.getSession().setAttribute("dash", "<li><img src ='led-icons/chart_bar.png'></a><a href='"+ rUrl + "/dashboard.html'>Analytics</a></li>");   
                 	//request.getSession().setAttribute("help2", "<li><img src ='led-icons/lifebuoy.png'></a><a href='"+ rUrl + "/help.html'>Help</a></li>"); 
                 	request.getSession().setAttribute("editpp", "<li><img src ='led-icons/camera.png'></a><a href='"+ rUrl + "/propertylist.html'>Publish Properties</a></li>");
                 	
                	//admin links
                	
                	request.getSession().setAttribute("musers", "<li><img src ='led-icons/group.png'></a><a href='"+ rUrl + "/allprofiles.html'>Manage Profiles</a></li>");
                	request.getSession().setAttribute("addpp", "<li><img src ='led-icons/picture.png'></a><a href='"+ rUrl + "/allproperty.html'>Upload Pictures</a></li>");
                	request.getSession().setAttribute("propmg", "<li><img src ='led-icons/wall_brick.png'></a><a href='"+ rUrl + "/manageproperty.html'>Manage Properties</a></li>");
                	//request.getSession().setAttribute("advert", "<li><img src ='led-icons/world.png'></a><a href='"+ rUrl + "/adverts.html'>Manage Adverts</a></li>");
                                      
                	//setup links
                	
                        System.out.println("Successfully logged in as " + profile.getEmail() + " with password " + profile.getPassword()+" decoded "+ hashPassword);
                        System.out.println("USER Menu");
                    	
                        return new ModelAndView("redirect:/search.html");
                   
                }  else
                	
                	result.rejectValue("email", "loginForm.email","Please confirm your credentials");
                    String errorMsg = "Please confirm your credentials";
                    System.err.println("Please confirm your credentials");
                    request.getSession().setAttribute("errmg", "<div class='alert alert-danger'>&nbsp;Please confirm your credentials</div><p><br>");
                    //request.getSession().setAttribute("errmg", "<button type='button' class='btn btn-danger'>Please confirm your credentials</button><p><br>");
                    //modelAndView.addObject("errorMsg", errorMsg);	
                    System.out.println("Login failure as " + profile.getEmail() + " with password " + profile.getPassword() +" decoded "+ hashPassword);
                
                	return modelAndView;
  	            } 
  	          
  	        request.getSession().setAttribute("errmg", "");
  	        return modelAndView;
  	          
        }   
        
    	public ProfileDAO getProfileDAO() {
    		return profileDAO;
    	}
    	
    	public void setProfileDAO(ProfileDAO profileDAO){
    		this.profileDAO = profileDAO;
    	}
   
    	public LogDAO getLogDAO() {
    		return logDAO;
    	}

    	public void setLogDAO(LogDAO logDAO) {
    		this.logDAO = logDAO;
    	}
    	
    	public MessagesDAO getMessagesDAO() {
    		return messagesDAO;
    	}

    	public void setMessagesDAO(MessagesDAO messagesDAO){
    		this.messagesDAO = messagesDAO;
    	}

}